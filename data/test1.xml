<?xml version="1.0" encoding="utf-8" ?>
<process>
	<sequence>
		<!--
		<set name="output" value="${[]}" />
		<parallel>
			<sequence>
				<invoke service="company_a" operation="getProducts" var="result_a" />
				<set name="output" value="${output.concat(result_a.items)}" />
			</sequence>
			
			<sequence>
				<invoke service="company_b" operation="getProducts" var="result_b" />
				<set name="output" value="${output.concat(result_b.items)}" />
			</sequence>
		</parallel>
		
		<log message="Found: ${output.length}" />
		-->
		<!-- list products -->
		<invoke service="db_service" operation="getProducts" var="products" />
		<log message="Found: ${products.length}" />
		
		<!-- add product -->
		<invoke service="db_service" operation="addProduct" var="productId">
			<params>
				<param name="product_name" value="test_product" />
				<param name="product_price" value="8.88" />
			</params>
		</invoke>
		<log message="Added product: ${productId}" />

		<!--  edit and verify -->
		<invoke service="db_service" operation="updateProduct" var="productEdited">
			<params>
				<param name="product_id" value="${productId}" />
				<param name="product_name" value="new_test_product" />
				<param name="product_price" value="9.99" />
			</params>
		</invoke>
		<choose>
			<when condition="${productEdited == 0}">
				<error message="Product not edited!" />
			</when>
		</choose>

		<!--  delete and verify -->
		<invoke service="db_service" operation="deleteProduct" var="productRemoved">
			<params>
				<param name="product_id" value="${productId}" />
			</params>
		</invoke>
		<choose>
			<when condition="${productRemoved == 0}">
				<error message="Product not removed!" />
			</when>
		</choose>
	</sequence>
	
	<!--
	<parallel>
		<sequence>
			<log message="start thread 1" />
			<delay seconds="15" />
			<log message="end thread 1" />
		</sequence>
		
		<sequence>
			<log message="start thread 2" />
			<delay seconds="10" />
			<log message="end thread 2" />
		</sequence>
		
		<sequence>
			<log message="start thread 3" />
			<delay seconds="5" />
			<log message="end thread 3" />
		</sequence>
	</parallel>
	-->

	<!--
	<sequence>
		<loop items="[15, 10, 5]" var="delay">
			<log message="delaying for ${delay} seconds" />
			<delay seconds="${delay}" />
			<log message="${delay} second delay complete" />
		</loop>
	</sequence>
	-->
	
	<!--
	<parallel>
		<loop items="[15, 10, 5]" var="delay">
			<log message="delaying for ${delay} seconds" />
			<delay seconds="${delay}" />
			<log message="${delay} second delay complete" />
		</loop>
	</parallel>
	-->
	
	<!--
	<sequence>
		<set var="testVar" value="-1" />
		<choose>
			<when condition="${testVar >= 1}">
				<log message="1 or greater! (value=${testVar})" />
			</when>
			<when condition="${testVar < 0}">
				<log message="less than 0! (value=${testVar})" />
			</when>
			<otherwise>
				<log message="Guess it must be zero! (value=${testVar})" />
			</otherwise>
		</choose>
	</sequence>
	-->
	
	<!--
	<sequence>
		<log message="" />
		<log message="" />
		<invoke service="company_b" operation="getQuote" var="result">
			<params>
				<param name="param1" value="value1" />
				<param name="param2" value="value2" />
				<param name="param3" value="value3" />
			</params>
		</invoke>
		<log message="results found = ${result.found}" />
		<invoke service="company_c" operation="getQuote" var="result">
			<params>
				<param name="param1" value="value1" />
				<param name="param2" value="value2" />
				<param name="param3" value="value3" />
			</params>
		</invoke>
		<log message="results found = ${result.found}" />
	</sequence>
	-->
	
	<!--
	<sequence>
		<set var="var1" value="100" />
		<sequence>
			<set var="scopedVar" value="200" />
			<set var="result" value="${var1 + scopedVar}" />
			<log message="result = ${result}" />
		</sequence>
		<sequence>
			<set var="scopedVar" value="300" />
			<set var="result" value="${var1 + scopedVar}" />
			<log message="result = ${result}" />
		</sequence>
	</sequence>
	-->
	
	<!--
	<sequence>
		<set var="var_global" value="something" />
		<sequence>
			<set var="var1" value="bob" />
			<log message="1" />
			<delay seconds=".5" />
			<log message="2 ${var1 + 'tim'}" />
			<delay seconds=".5" />
		</sequence>
		
		<sequence>
			<log message="3" />
			<delay seconds=".5" />
			<log message="4" />
			<log message="${var_global}, ${var1}" />
			<delay seconds=".5" />
		</sequence>
	</sequence>
	-->
</process>